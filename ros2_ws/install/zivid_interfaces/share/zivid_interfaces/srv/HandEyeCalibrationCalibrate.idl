// generated from rosidl_adapter/resource/srv.idl.em
// with input from zivid_interfaces/srv/HandEyeCalibrationCalibrate.srv
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Transform.idl"
#include "zivid_interfaces/msg/FixedPlacementOfCalibrationObjects.idl"
#include "zivid_interfaces/msg/HandEyeCalibrationResidual.idl"

module zivid_interfaces {
  module srv {
    module HandEyeCalibrationCalibrate_Request_Constants {
      const uint8 EYE_TO_HAND = 1;
      const uint8 EYE_IN_HAND = 2;
    };
    struct HandEyeCalibrationCalibrate_Request {
      @verbatim (language="comment", text=
        "The configuration to use for the hand-eye calibration: EYE_TO_HAND or EYE_IN_HAND")
      uint8 configuration;

      @verbatim (language="comment", text=
        "Handles of hand-eye captures to use in this hand-eye calibration. Leave empty to use all captures.")
      sequence<int32> capture_handles;

      @verbatim (language="comment", text=
        "Optionally, add fixed objects for low degrees-of-freedom (DOF) hand-eye calibration. Leave default for regular (6-DOF)" "\n"
        "calibration.")
      zivid_interfaces::msg::FixedPlacementOfCalibrationObjects fixed_objects;
    };
    struct HandEyeCalibrationCalibrate_Response {
      boolean success;

      @verbatim (language="comment", text=
        "Textual representation of the result. Any indices being referred to correspond to entries into the provided list of" "\n"
        "capture handles." "\n"
        "" "\n"
        "Note: Any reported lengths in this message are given in units of millimeter, which are used internally in the Zivid" "\n"
        "driver. This applies only to the textual representation of the result, other returned numerical results are given in" "\n"
        "the ROS convention of meter, as specified for each related field.")
      string message;

      @verbatim (language="comment", text=
        "Computed hand-eye transform." "\n"
        "" "\n"
        "The transform has the following meaning depending on the provided configuration:" "\n"
        "" "\n"
        "  - Eye-in-hand: Camera pose in robot end-effector frame." "\n"
        "  - Eye-to-hand: Camera pose in robot base frame." "\n"
        "" "\n"
        "Note: Lengths are given in units of meter. In the Zivid driver, the units are automatically converted from the default" "\n"
        "units of the Zivid point clouds in millimeter, to the ROS convention of meter.")
      geometry_msgs::msg::Transform transform;

      @verbatim (language="comment", text=
        "Hand-eye calibration residuals." "\n"
        "" "\n"
        "Feature points (for each input pose) are transformed into a common frame. A rigid transform between feature points and" "\n"
        "corresponding centroids are utilized to compute residuals for rotational and translational parts." "\n"
        "" "\n"
        "The order and size of the list of residuals correspond to the provided list of capture handles.")
      sequence<zivid_interfaces::msg::HandEyeCalibrationResidual> residuals;
    };
  };
};
