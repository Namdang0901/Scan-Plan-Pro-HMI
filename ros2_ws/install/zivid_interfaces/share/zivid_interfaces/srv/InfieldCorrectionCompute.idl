// generated from rosidl_adapter/resource/srv.idl.em
// with input from zivid_interfaces/srv/InfieldCorrectionCompute.srv
// generated code does not contain a copyright notice


module zivid_interfaces {
  module srv {
    struct InfieldCorrectionCompute_Request {
      uint8 structure_needs_at_least_one_member;
    };
    struct InfieldCorrectionCompute_Response {
      boolean success;

      string message;

      @verbatim (language="comment", text=
        "Returns true if infield correction has been started on the target node. It needs to be started before capturing and" "\n"
        "computing.")
      boolean infield_correction_started;

      @verbatim (language="comment", text=
        "Number of successful infield correction captures. We recommend multiple captures with different board positions.")
      int32 number_of_captures;

      @verbatim (language="comment", text=
        "The list of estimated local dimension trueness error for each capture in this infield correction session. The" "\n"
        "dimension trueness represents the relative deviation between the measured size of the calibration object and the true" "\n"
        "size of the calibration object, including the effects of any in-field correction stored on the camera at the time of" "\n"
        "capture. Note that this estimate is local, i.e. only valid for the region of space very close to the calibration" "\n"
        "object." "\n"
        "" "\n"
        "The value is a fraction (relative trueness error). Multiply by 100 to get trueness error in percent.")
      sequence<float> trueness_errors;

      @verbatim (language="comment", text=
        "The average local dimension trueness error for the captures in this session. See 'trueness_errors' for more" "\n"
        "information on this measure.")
      float average_trueness_error;

      @verbatim (language="comment", text=
        "The maximum local dimension trueness error for the captures in this session. See 'trueness_errors' for more" "\n"
        "information on this measure.")
      float maximum_trueness_error;

      @verbatim (language="comment", text=
        "The estimated dimension accuracy error obtained if the correction is applied." "\n"
        "" "\n"
        "This number represents a 1-sigma (68% confidence) upper bound for dimension trueness error in the working volume" "\n"
        "(z=z_min to z=z_max, across the entire field of view). In other words, it represents the expected distribution of" "\n"
        "local dimension trueness measurements (see `trueness_errors`) that can be expected if measuring throughout the working" "\n"
        "volume." "\n"
        "" "\n"
        "The value is a fraction (relative trueness error). Multiply by 100 to get trueness in percent." "\n"
        "" "\n"
        "Note that the accuracy close to where the original data was captured is likely much better than what is implied by" "\n"
        "this number. This number is rather an accuracy estimate for the entire extrapolated working volume.")
      float dimension_accuracy;

      @verbatim (language="comment", text=
        "The range of validity of the accuracy estimate (lower end)." "\n"
        "" "\n"
        "Note: Lengths are given in units of meter. In the Zivid driver, the units are automatically converted from the default" "\n"
        "units of the Zivid point clouds in millimeter, to the ROS convention of meter.")
      float z_min;

      @verbatim (language="comment", text=
        "The range of validity of the accuracy estimate (upper end)." "\n"
        "" "\n"
        "Note: Lengths are given in units of meter. In the Zivid driver, the units are automatically converted from the default" "\n"
        "units of the Zivid point clouds in millimeter, to the ROS convention of meter.")
      float z_max;
    };
  };
};
